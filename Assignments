You and your rich Uncle Jimmy just purchased Maven Movies, a brick and mortar DVD Rental business. Uncle Jimmy put up the money, and you’re in charge of the day-to-day operations. As a new owner, you’ll need to learn everything you can about your business: your product inventory, your staff, your customer purchase behaviors, etc. You have access to the entire Maven Movies SQL database, but the remaining employees are not able to give you much direction. You’ll need to analyze everything on your own.

-- Assignment 1
-- “I’m going to send an email letting our customers know there has been a management change.Could you pull a list of the first name, last name, and emailof each of our customers?”

SELECT 
    first_name, last_name, email
FROM
    customer;

-- Assignment 2
-- “My understanding is that we have titles that we rent for durations of 3, 5, or 7days.Could you pull the records of our films and see if there are any other rental durations?”

SELECT DISTINCT
    rental_duration
FROM
    film;

-- Assignment 3
--  “I’d like to look at payment records for our long-term customers to learn about their purchase patterns.Could you pull all payments from our first 100 customers (based on customer ID)?”

SELECT 
    *
FROM
    payment
WHERE
    customer_id BETWEEN 1 AND 100;

-- Assignment 4
-- “The payment data you gave me on our first 100 customers was great –thank you!Now I’d love to see just payments over $5for those same customers, since January 1, 2006.” 

SELECT 
    customer_id, rental_id, amount, payment_date
FROM
    payment
WHERE
    customer_id < 101 AND amount >= 5
        AND payment_date >= '2006-01-01';

-- Assignment 5
-- “The data you shared previously on customers 42, 53, 60, and 75 was good to see. Now, could you please write a query to pull all payments from those specific customers,along withpayments over $5, from any customer?

SELECT 
    customer_id, rental_id, amount, payment_date
FROM
    payment
WHERE
    amount > 5 OR customer_id in(42,53,60,75);

-- Assignment 6
--  “We need to understand the special features in our films. Could you pull a list of films which include a Behind the Scenes special feature?"

SELECT 
    title, special_features
FROM
    film
WHERE
    special_features LIKE '%Behind the Scenes%';

-- Assignment 7
-- “I need to get a quick overview of how long our movies tend to be rented out for. Could you please pull a count of titles sliced by rental duration?”

SELECT 
    rental_duration,
    COUNT(rental_duration) AS films_with_this_rental_duration
FROM
    film
GROUP BY rental_duration;

-- Assignment 8
--  “I’m wondering if we charge more for a rental when the replacement cost is higher. Can you help me pull a count of films, along with the average, min, and max rental rate, grouped by replacement cost?"

SELECT 
    replacement_cost,
    COUNT(film_id) AS number_of_films,
    MIN(rental_rate) AS cheapest_rental_rate,
    MAX(rental_rate) AS most_expensive_rate,
    AVG(rental_rate) AS average_rental_rate
FROM
    film
GROUP BY replacement_cost;

-- Assignemt 9
--  “I’d like to talk to customers that have not rented much from us to understand if there is something we could be doing better. Could you pull a list of customer_idswith less than 15 rentalsall-time?”

SELECT 
    customer_id, COUNT(rental_id) AS total_rent
FROM
    rental
GROUP BY customer_id
HAVING COUNT(rental_id) < 15;

-- Assignment 10
--  “I’d like to see if our longest films also tend to be our most expensive rentals. Could you pull me a list of all film titlesalong with their lengths and rental rates, and sort them from longest to shortest?

SELECT 
    title, length, rental_rate
FROM
    film
ORDER BY length DESC;

-- Assignment 11
-- “I’d like to know which store each customer goes to, and whether or not they are active. Could you pull a list of first and last names of all customers, and label them as either ‘store 1 active’, ‘store 1 inactive’, ‘store 2 active’, or ‘store 2 inactive’?”

SELECT 
    first_name,
    last_name,
    CASE
        WHEN store_id = 1 AND active = 1 THEN 'store 1 active'
        WHEN store_id = 1 AND active = 0 THEN 'store 1 inactive'
        WHEN store_id = 2 AND active = 1 THEN 'store 2 active'
        WHEN store_id = 2 AND active = 0 THEN 'store 2 inactive'
        ELSE 'check the code'
    END AS store_and_status
FROM
    customer;

-- Assignment 12
-- “I’m curious how many inactive customers we have at each store. Could you please create a table to count the number of customers broken down by store_id(in rows), and active status (in columns)?

SELECT 
    store_id,
    COUNT(CASE
        WHEN active = 1 THEN customer_id
        ELSE NULL
    END) AS active,
    COUNT(CASE
        WHEN active = 0 THEN customer_id
        ELSE NULL
    END) AS inactive
FROM
    customer
GROUP BY store_id;

-- Assignments
--  We will need a list of all staff members, including their first and last names, email addresses, and the store identification number where they work.

SELECT 
    staff_id, first_name, last_name, email, store_id
FROM
    staff;
    
-- We will need separate counts of inventory items held at each of your two stores.
    
  select
  store_id,
  count(inventory_id) as inventory_items
  from inventory
  group by store_id;
  
-- We will need a count of active customers for each of your stores. Separately, please.
  
 SELECT 
    store_id,
    COUNT(CASE
        WHEN active = 1 THEN customer_id
        ELSE NULL
    END) AS active_customers
FROM
    customer
GROUP BY store_id;
    
-- In order to assess the liability of a data breach, we will need you to provide a count of all customer email addresses stored in the database.
    
   SELECT DISTINCT
    COUNT(email) AS emails
FROM
    customer;
    
--  We are interested in how diverse your film offering is as a means of understanding how likely you are to keep customers engaged in the future. Please provide a count of unique film titles you have in inventory at each store and then provide a count of the unique categories of films you provide.

SELECT 
    store_id, COUNT(DISTINCT film_id) AS unique_films
FROM
    inventory
GROUP BY store_id;

SELECT 
    COUNT(DISTINCT name) AS unique_categories
FROM
    category;

-- We would like to understand the replacement cost of your films. Please provide the replacement cost for the film tat is least expensive to replace, the most expensive to replace, and the average of all films you carry. 

SELECT 
    MIN(replacement_cost) AS least_expensive_to_replace,
    MAX(replacement_cost) AS most_expensive_to_replace,
    AVG(replacement_cost) AS average_replacement_cost
FROM
    film;
    
-- We are interested in having you put payment monitoring systems and maximum payment processing restrictions in place in order to minimize the future risk of fraud by your staff. Please provide the average payment you process, as well as the maximum payment you have processed.

SELECT 
    AVG(amount) AS average_payment, MAX(amount) AS max_payment
FROM
    payment;
    
-- We would like to better understand what your customer base looks like. Please provide a list of all customer identification values, with a count of rentals they have made all-time, with your highest volume customers at the top of the list.

SELECT 
    customer_id, COUNT(rental_id) AS number_of_rental
FROM
    rental
GROUP BY customer_id
ORDER BY COUNT(rental_id) DESC;

-- Assignment 
-- “Can you pull for me a list of each film we have in inventory? I would like to see the film’s title, description, and the store_id value associated with each item, and its inventory_id. Thanks!”

SELECT 
    inventory_id, store_id, film.title, film.description
FROM
    inventory
        INNER JOIN
    film ON inventory.film_id = film.film_id;
    
-- Assignment
--  “One of our investors is interested in the films we carry and how many actorsare listed for each film title. Can you pull a list of all titles, and figure out how many actors are associated with each title?”


SELECT 
    film.title, COUNT(film_actor.actor_id) AS count_of_actors
FROM
    film
        LEFT JOIN
    film_actor ON film_actor.film_id = film.film_id
GROUP BY film.title;

